server {

    server_tokens off;

    # Set headers
    # add_header X-Application-Context     "";
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    # add_header X-Frame-Options           "DENY";
    # add_header X-XSS-Protection          "1; mode=block";
    # add_header X-Content-Type-Options    "nosniff";
    # add_header Content-Security-Policy   "default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' https: data:; font-src 'self'; connect-src 'self'";
    # add_header Referrer-Policy           "no-referrer";
    add_header Pragma                    "no-cache";
    add_header Cache-Control             "no-cache, no-store, must-revalidate";

    listen       8080;
    server_name  localhost;
    root   /usr/share/nginx/html/;
    client_max_body_size 2M;

    # Root Application
    location / {
        index  index.html;
        try_files $uri $uri/ /web/index.html?$args;
    }

    location /interaction {
        proxy_pass         http://dtp-server:8080;
        proxy_redirect     off;
        rewrite /interaction/(.*) /interaction/$1  break;
    }

    location /.well-known {
        proxy_pass         http://dtp-server:8080;
        proxy_redirect     off;
        rewrite /.well-known/(.*) /.well-known/$1  break;
    }

    # avoid messing up with /web/authorize from the SPA
    location ~ (?<!web)\/authorize {
        proxy_pass         http://dtp-server:8080;
        proxy_redirect     off;
        rewrite /authorize/(.*) /authorize/$1  break;
    }


    error_page  400 401 403 404  /40x.html;
    location =  /web/40x.html {
        root   /usr/share/nginx/html/;
        internal;
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /web/50x.html {
        root   /usr/share/nginx/html/;
    }

    # Health check
    location = /web/status {
        return 200 'up';
        add_header Content-Type text/plain;
    }
}